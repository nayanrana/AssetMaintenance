@model AssetMaintenance.BAL.DTO.FuelRecordDto
<link href="~/Vendor/sweetalert/lib/sweet-alert.css" rel="stylesheet" />

<script src="~/Vendor/sweetalert/lib/sweet-alert.js"></script>
<div class="normalheader ">
    <div class="hpanel">
        <div class="panel-body">
            <a class="small-header-action" href="">
                <div class="clip-header">
                    <i class="fa fa-arrow-up"></i>
                </div>
            </a>

            <div id="hbreadcrumb" class="pull-right m-t-lg">
                <ol class="hbreadcrumb breadcrumb">
                    <li><a href="@Url.Action("Index", "ControlPanel" )">Fuel Management</a></li>
                    <li class="active">
                        <span>Fuel Management</span>
                    </li>
                </ol>
            </div>
            <h3 class="font-light m-b-xs">
                @if (Model.Id != 0)
                {
                    <lable>Edit Fuel Management</lable>
                }
                else
                {<lable>Add Fuel Management</lable>}
            </h3>

        </div>
    </div>
</div>


<div class="content animate-panel" style="padding-top:30px;" id="InputFormDiv">
    <div class="hpanel">
        <div class="panel-heading">
            <div class="panel-tools">
                <a class="showhide"><i class="fa fa-chevron-up"></i></a>

            </div>
            Header Details
        </div>
        <div class="panel-body">
            @Html.HiddenFor(model => model.Id)
            @using (Html.BeginForm("", "", FormMethod.Post, new { role = "form", enctype = "multipart/form-data", id = "createFuelRecordForm" }))
            {
                @Html.AntiForgeryToken()

                <div class="col-md-12">
                    <div class="">
                        @Html.HiddenFor(model => model.Id)
                        @Html.HiddenFor(model => model.Is_Excel)
                        <div class="">
                            <div class="row">

                                <div class="form-group col-lg-4">
                                    <label>Filling Station</label>
                                    @Html.TextBoxFor(model => model.FillingStation, new { @class = "form-control", placeholder = "Filling Station", id = "FillingStation", required = "required" })
                                    @*<input id="FillingStation" class="form-control" name="FillingStation" placeholder="Filling Station">*@
                                </div>
                                <div class="form-group col-lg-2">
                                    <label>Period From</label>
                                    @Html.TextBoxFor(model => model.PeriodFrom, "{0:dd/MM/yyyy}", new { @class = "form-control datepicker", placeholder = "From", id = "PeriodFrom" })
                                </div>
                                <div class="form-group col-lg-2">
                                    <label>Period To</label>
                                    @Html.TextBoxFor(model => model.PeriodTo, "{0:dd/MM/yyyy}", new { @class = "form-control datepicker", placeholder = "To", id = "PeriodTo" })
                                </div>
                                <div class="form-group col-lg-4">
                                    <label>Claim Number</label>
                                    @Html.TextBoxFor(model => model.ClaimNumber, new { @class = "form-control allownumericwithoutdecimal", placeholder = "ClaimNumber", id = "ClaimNumber" })
                                    @*<input type="text" id="ClaimNo" class="form-control" name="ClaimNo" placeholder="Claim No.">*@
                                </div>
                                <div class="form-group col-lg-4">
                                    <label>Voucher Number</label>
                                    @Html.TextBoxFor(model => model.VoucherNumber, new { @class = "form-control", placeholder = "Voucher Number", id = "VoucherNumber" })
                                    @*<input id="VoucherNo" class="form-control" name="VoucherNo" placeholder="Voucher Number">*@
                                </div>
                                <div class="form-group col-lg-4">
                                    <label>Fuel Type<span class="req">*</span></label>
                                   
                                    @Html.DropDownListFor(m => m.FuelType,
                                        new SelectList(new List<SelectListItem>
                                        {
                                            new SelectListItem { Text = "Petrol", Value = "Petrol"},
                                            new SelectListItem { Text = "Diesel", Value = "Diesel"}
                                            }, "Value", "Text"),
                                            "- Select Avail. Type -",
                                            new { @class = "form-control", id = "ManualFuelType", required = "required" })
                                </div>
                                <div class="form-group col-lg-4">
                                    <label>Quantity Litre<span class="req">*</span></label>
                                    @Html.TextBoxFor(model => model.QuantityLitre, new { @class = "form-control allownumericwithoutdecimal", placeholder = "Quantity Litre", id = "QuantityLitre", required = "required" })
                                    @*<input id="QuantityLitre" class="form-control" name="QuantityLitre" placeholder="Quantity Litre">*@
                                </div>
                                <div class="form-group col-lg-4">
                                    <label>Amount(Excl. Vat)</label>
                                    @Html.TextBoxFor(model => model.AmountExclVat, new { @class = "form-control allownumericwithdecimal", placeholder = "Amount(Excl. Vat)", id = "AmountExclVat" })
                                    @*<input id="AmountExcl" class="form-control" name="AmountExcl" placeholder="Amount(Excl. Vat)">*@
                                </div>
                                <div class="form-group col-lg-4">
                                    <label>Discount Amount</label>
                                    @Html.TextBoxFor(model => model.DiscountAmount, new { @class = "form-control allownumericwithdecimal", placeholder = "Discount Amount", id = "DiscountAmount", max = "100" })
                                    @*<input type="text" id="Discount" class="form-control allownumericwithoutdecimal" name="Discount" placeholder="Discount" max="100">*@
                                </div>
                                <div class="form-group col-lg-4">
                                    <label>Vat Amount</label>
                                    @Html.TextBoxFor(model => model.VatAmount, new { @class = "form-control allownumericwithdecimal", placeholder = "Vat Amount", id = "VatAmount" })
                                    @*<input type="text" id="VatAmount" class="form-control allownumericwithdecimal" name="VatAmount" placeholder="Vat Amount">*@
                                </div>

                                <div class="form-group col-lg-4">
                                    <label>Amount inc.vat</label>
                                    @Html.TextBoxFor(model => model.AmountIncVat, new { @class = "form-control allownumericwithdecimal", placeholder = "Amount inc.vat", id = "AmountIncVat" })
                                    @*<input type="text" id="Amountinc" class="form-control allownumericwithdecimal" name="Amountinc" placeholder="Amount inc.vat">*@
                                </div>

                                <div class="form-group col-lg-8">
                                    <lable><strong>Select Mode</strong></lable>
                                    <div class="radio">
                                        <label>
                                            <input type="radio" value="0" id="Excel" name="mode"> Excel
                                        </label>
                                        <label>
                                            <input type="radio" value="1" id="Manual" name="mode"> Manual
                                        </label>

                                    </div>
                                </div>

                                <div class="col-md-2 excelform">
                                    <br />
                                    <a href="~/Template/Fuel Template.xlsx" download class="btn-link">Download format </a>&nbsp;&nbsp;

                                </div>
                                <div class="form-group col-lg-3 excelform">
                                    <label>File Upload</label>
                                    <input type="file" id="fileBrowse" />
                                </div>

                                <div class="col-lg-4 form-group excelform">
                                    <button type="button" class="btn btn-info" id="btnUploadFile" onclick="UploadFiles()">Upload</button>
                                </div>

                                <div class="form-group col-lg-12 text-right">
                                    @if (Model.Id != 0)
                                    {
                                        <button class="btn btn-success" id="btnCreateFuelRecord" type="button">Save</button>
                                    }
                                    else
                                    {
                                        <button class="btn btn-success" id="btnCreateFuelRecord" type="button" disabled>Add</button>
                                    }
                                    <button id="btnCancel" type="reset" class="cancel btn btn-default">Cancel</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                @*</form>*@
            }

        </div>

    </div>


    <div class="hpanel">
        <div class="panel-heading">
            <div class="panel-tools">
                <a class="showhide"><i class="fa fa-chevron-up"></i></a>

            </div>
            Item Details
        </div>

        <div class="panel-body">
            <div class="row">
                <div class="table-responsive">
                    <table id="fuelDetailsDiv" class="table table-striped table-bordered table-hover dataTable no-footer" width="100%">
                        <tbody id="myBody"></tbody>
                    </table>
                </div>
            </div>

            <br />
        </div>

        <div class="panel-body">
            <div class="row">
                <div class="table-responsive">
                    <table id="fuelDetailsExcel" class="table table-striped table-bordered table-hover dataTable no-footer" width="100%">
                        <tbody id="myBody"></tbody>
                    </table>
                </div>
            </div>

            <br />
        </div>

    </div>

</div>


@Html.Partial("_ViewUploadFile")
@Html.Partial("_SaveItemDetail", Model.fuelRecordManualDto)

@section Styles {
    @Styles.Render("~/bundles/datepicker/css")
    @Styles.Render("~/bundles/datatables/css")

}
@section Scripts {
    @Scripts.Render("~/bundles/validation/js")
    @Scripts.Render("~/bundles/datepicker/js")
    @Scripts.Render("~/bundles/datatables/js")
    @Scripts.Render("~/bundles/datatablesBootstrap/js")
    @Scripts.Render("~/bundles/datatablesPlugins/js")

    <script type="text/javascript">
    toastr.options = {
        "debug": false,
        "newestOnTop": false,
        "positionClass": "toast-top-center",
        "closeButton": true,
        "debug": false,
        "toastClass": "animated fadeInDown",
    };

        $(function () {
            $('#PeriodFrom').datepicker({ autoclose: true, format: 'dd/mm/yyyy' });
            $('#PeriodTo').datepicker({ autoclose: true, format: 'dd/mm/yyyy' });
            $('#ManualDate').datepicker({ autoclose: true, format: 'dd/mm/yyyy' });
            $('#ManualPeriodFrom').datepicker({ autoclose: true, format: 'dd/mm/yyyy' });
            $('#ManualPeriodTo').datepicker({ autoclose: true, format: 'dd/mm/yyyy' });
            $('#ManualInvoiceDate').datepicker({ autoclose: true, format: 'dd/mm/yyyy' });
            if ($('#Id').val() > 1) {
                $('.FuelListedit').show();
            }
            else {
                $('.FuelListedit').hide();
            }

          //  getFuelRecordList();

            $("#btnCreateFuelRecord").click(function () {
                createFuelRecord();
                $("#createFuelRecordForm").validate({
                    rules: {
                        BatchNo: {
                            required: true
                        },
                        RetailPrice: {
                            required: true
                        }
                    },
                    submitHandler: function (form) {
                        createFuelRecord();
                    }
                });

            });
        });

     function createFuelRecord() {
         if ($("#createFuelRecordForm").valid()) {

             swal({
                 title: "",
                 text: "Do you want to generate a payment certificate for information recorded?",
                 type: "warning",
                 showCancelButton: true,
                 confirmButtonColor: "#DD6B55",
                 confirmButtonText: "Yes",
                 cancelButtonText: "No",
                 closeOnConfirm: true,
                 closeOnCancel: true,
                 closeButton: true
             },
                 function (isConfirm) {
                     var formData = new FormData($('#createFuelRecordForm')[0]);
                     formData.append('FillingStation', $("#FillingStation").val());
                     formData.append('PeriodFrom', $("#PeriodFrom").val());
                     formData.append('PeriodTo', $("#PeriodTo").val());
                     formData.append('ClaimNumber', $("#ClaimNumber").val());
                     formData.append('VoucherNumber', $("#VoucherNumber").val());
                     formData.append('QuantityLitre', $("#QuantityLitre").val());
                     formData.append('AmountExclVat', $("#AmountExclVat").val());
                     formData.append('DiscountAmount', $("#DiscountAmount").val());
                     formData.append('VatAmount', $("#VatAmount").val());
                     formData.append('AmountIncVat', $("#AmountIncVat").val());
                     formData.append('Modeofupload', $("input[name='mode']:checked").val());
                     formData.append('Is_PaymentReceiptGenerate', isConfirm);
                    
                     $.ajax({
                         type: 'POST',
                         data: formData,
                         cache: false,
                         contentType: false,
                         processData: false,
                         url: '@Url.Action("CreateFuelRecord", "FuelManagement")',
                         success: function (data) {
                             if (data != 'validation') {
                                 $($("#createFuelRecordForm input").val(''));

                                 toastr.success("Fuel Record inserted successfully.");
                                 window.location.href = '/FuelManagement/List';
                                 $('.FuelListedit').remove();
                             }
                             else {
                                // swal.close();
                                 toastr.error("Voucher Number already exists.");
                             }
                         }
                     });

                 });
         }
        }

       
        function UploadFiles() {
            debugger;
            if (document.getElementById("fileBrowse").files.length > 0) {
                var formData = new FormData();
                var file = document.getElementById("fileBrowse").files[0];
                formData.append("Uploadfiles", file);
                formData.append("id", $("#Id").val());

                $.ajax({
                    type: "POST",
                    url: '/FuelManagement/DisplayFileData',
                    data:formData,
                    dataType: 'JSON',
                    contentType: false,
                    processData: false,
                    success: function (response) {
                        if (response.msg.trim() == "") {
                            $("#tblUploadedData tbody").html('');
                            debugger;

                            CreateItemListDetail(response);
                            $("#modalViewData").modal('show');
                            $('.FuelListedit').remove();
                        }
                        else {
                            toastr.error(response.msg);

                        }
                    },
                    error: function (error) {
                        alert("errror");
                    }
                });
            }

        }

        function ConfirmButton() {
            $('#btnCreateFuelRecord').prop('disabled', false);
            $("#fuelDetailsDiv").html('').html($("#tblUploadedData").html());

        }

        function FuelManagementGrid() {
            debugger;
            if ($("#manualcreate").valid() == true) {
                var formData = new FormData();
             
                //formData.append('Driver', $("#ManualDriver").val());
                //formData.append('ActualMilage', $("#ManualActualMileage").val());
                //formData.append('CurrentMilage', $("#ManualCurrentMileage").val());

                //formData.append('Date', $("#ManualDate").val());
                //formData.append('VoucherNo', $("#ManualVoucherNo").val());
                formData.append('FillingStation', $("#ManualFillingStation").val());
                //formData.append('FuelType', $("#ManualFuelType").val());
                //formData.append('Quantities', $("#ManualQuantityLitre").val());
                //formData.append('AmountExVal', $("#ManualAmount").val());
                //formData.append('Discount', $("#ManualDiscountAmount").val());
                //formData.append('VatAmount', $("#MaunalVatAmount").val());
                //formData.append('AmountInVal', $("#ManualAmountInc").val());

                formData.append('PeriodFrom', $("#ManualPeriodFrom").val());
                formData.append('PeriodTo', $("#ManualPeriodTo").val());
                formData.append('RegistrationNo', $("#ManualRegistrationNo").val());
                formData.append('FuelInvoiceNo', $("#ManualFuelInvoiceNo").val());
                formData.append('InvoiceDate', $("#ManualInvoiceDate").val());
                formData.append('PaymentCertificateNo', $("#ManualPaymentCertificateNo").val());
                formData.append('SupplierCodeName', $("#ManualSupplierCodeName").val());
                formData.append('DiscountAmountDiesel', $("#ManualDiscountAmountDiesel").val());
                formData.append('DiscountAmountGasoline', $("#ManualDiscountAmountGasoline").val());
                formData.append('InvoiceDiscountAmount', $("#ManualInvoiceDiscountAmount").val());
                formData.append('InvoiceTotalAmount', $("#ManualInvoiceTotalAmount").val());
                formData.append('InvoiceVatAmount', $("#MaunalInvoiceVatAmount").val());
                formData.append('AmountDieselLt', $("#ManualAmountDieselLt").val());
                formData.append('AmountGasolineLt', $("#ManualAmountGasolineLt").val());
                formData.append('ClaimNo', $("#ManualClaimNo").val());

                formData.append('FuelRecord_DetailId', $("#FuelRecord_DetailId").val());-
                    formData.append('FuelRecordId', $("#Id").val());

                

                $.ajax({
                    type: 'POST',
                    data: formData,
                    cache: false,
                    contentType: false,
                    processData: false,
                    url: '@Url.Action("CreateFuelManualRecord", "FuelManagement")',
                    dataType: 'json',
                    success: function (data) {
                        $("#tblUploadedData tbody").html('');
                        CreateItemList(data);
                        toastr.success(data.msg);
                        $("#fuelDetailsDiv").html('').html($("#tblUploadedData").html());
                        $("#modalSaveItemData").modal('hide');
                        $('#btnCreateFuelRecord').prop('disabled', false);


                    }
                });
            }
        }
        function CreateItemList(response) {
            var amtTotal = 0, discount = 0, vatTotal = 0, amtVat = 0;
            debugger;
           
            $.each(response.Html, function (i, item) {
                var tr;
                tr = $('<tr />');
                tr.append("<td class='text-center'>" + (item.FillingStation != undefined ? item.FillingStation : "-") + "</td>");
                tr.append("<td class='text-center'>" + getFormattedDate(item.PeriodFrom) + "</td>");
                tr.append("<td class='text-center'>" + getFormattedDate(item.PeriodTo) + "</td>");
                tr.append("<td class='text-center'>" + (item.RegistrationNo != undefined ? item.RegistrationNo : "-") + "</td>");
                tr.append("<td class='text-center'>" + (item.FuelInvoiceNo != undefined ? item.FuelInvoiceNo : "-") + "</td>");
                tr.append("<td class='text-center'>" + getFormattedDate(item.InvoiceDate) + "</td>");
                tr.append("<td class='text-center'>" + (item.PaymentCertificateNo != undefined ? item.PaymentCertificateNo : "-") + "</td>");
                tr.append("<td class='text-center'>" + (item.SupplierCodeName != undefined ? item.SupplierCodeName : "-") + "</td>");
                tr.append("<td class='text-center'>" + (item.DiscountAmountDiesel != undefined ? item.DiscountAmountDiesel : "-") + "</td>");
                tr.append("<td class='text-center'>" + (item.DiscountAmountGasoline != undefined ? item.DiscountAmountGasoline : "-") + "</td>");
                tr.append("<td class='text-center'>" + (item.InvoiceDiscountAmount != undefined ? item.InvoiceDiscountAmount : "-") + "</td>");
                tr.append("<td class='text-center'>" + (item.InvoiceTotalAmount != undefined ? item.InvoiceTotalAmount : "-") + "</td>");
                tr.append("<td class='text-center'>" + (item.InvoiceVatAmount != undefined ? item.InvoiceVatAmount : "-") + "</td>");
                tr.append("<td class='text-center'>" + (item.AmountDieselLt != undefined ? item.AmountDieselLt : "-") + "</td>");
                tr.append("<td class='text-center'>" + (item.AmountGasolineLt != undefined ? item.AmountGasolineLt : "-") + "</td>");
                tr.append("<td class='text-center'>" + (item.ClaimNo != undefined ? item.ClaimNo : "-") + "</td>");

                //tr.append("<td class='text-center'>" + (item.VoucherNo != undefined ? item.VoucherNo : "-")  + "</td>");
                
                //tr.append("<td class='text-center'>" + getFormattedDate(item.Date) + "</td>");
                //tr.append("<td class='text-center'>" + (item.Driver != undefined ? item.Driver : "-" )+ "</td>");
                //tr.append("<td class='text-center'>" + (item.FuelType != undefined ? item.FuelType : "-" )+ "</td>");
                //tr.append("<td class='text-center'> " +( item.Quantities != undefined ? item.Quantities : "-")+ "</td>");
                //tr.append("<td class='text-center'> " +( item.ActualMilage != undefined ? item.ActualMilage : "-")+ "</td>");
                //tr.append("<td class='text-center'> " +( item.CurrentMilage != undefined ? item.CurrentMilage : "-")+ "</td>");
                //tr.append("<td class='text-center'> " +( item.AmountExVal != undefined ? item.AmountExVal : "-")+ "</td>");
                //tr.append("<td class='text-center'> " +( item.Discount != undefined ? item.Discount : "-")+ "</td>");
                //tr.append("<td class='text-center'> " +( item.VatAmount != undefined ? item.VatAmount : "-")+ "</td>");
                //tr.append("<td class='text-center'> " +( item.AmountInVal != undefined ? item.AmountInVal : "-")+ "</td>");
                if (item.AmountExVal != undefined)
                    amtTotal = parseFloat(amtTotal) + parseFloat(item.AmountExVal);
                if (item.Discount != undefined)

                vatTotal = parseFloat(vatTotal) + parseFloat(item.Discount);
                if (item.VatAmount != undefined)
                discount = parseFloat(discount) + parseFloat(item.VatAmount);
                if (item.AmountInVal != undefined)
                amtVat = parseFloat(amtVat) + parseFloat(item.AmountInVal);
                if (item.FuelRecordId != 0) {
                    tr.append("<td class='text-center' data-title='Edit'> "
                        + "<div> <a href= 'javascript:void(0);' onclick='gridedit(" + item.FuelRecord_DetailId + ")'  data-asset=" + item.FuelRecord_DetailId
                        + " class='btn btn-xs btn-default'><i class='fa fa-pencil text-success'></i><span class='bold'> &nbsp;Edit </span></a></div>" + "</td>");
                }
                else {
                    tr.append("<td></td>")
                }
                if (item.FuelRecordId != 0) {
                    tr.append("<td class='text-center' data-title='Delete'> "
                        + "<div> <a href='javascript:void(0);' onclick='deleteFuelRecord(" + item.FuelRecord_DetailId + ")' data-asset=" + item.FuelRecord_DetailId
                        + " class='btn btn-xs btn-default'><i class='fa fa-trash text-danger'></i> &nbsp;Delete</a></div>" + "</td>");
                }
                else {
                    tr.append("<td></td>")
                }
                $("#tblUploadedData tbody").append(tr);
            });
            $("#tblUploadedData #tfootAmtTotal").html(amtTotal);
            $("#tblUploadedData #tfootDiscount").html(vatTotal);
            $("#tblUploadedData #tfootVatTotal").html(discount);
            $("#tblUploadedData #tfootAmtVatTotal").html(amtVat);
        }

        function CreateItemListDetail(response) {
            var amtTotal = 0, discount = 0, vatTotal = 0, amtVat = 0;
            debugger;

            $.each(response.Html, function (i, item) {
                var tr;
                tr = $('<tr />');
                tr.append("<td class='text-center'>" + getFormattedDate(item.Date) + "</td>");
                tr.append("<td class='text-center'>" + (item.VoucherNo != undefined ? item.VoucherNo : "-") + "</td>");
                tr.append("<td class='text-center'>" + (item.RegistrationNo != undefined ? item.RegistrationNo : "-") + "</td>");
                tr.append("<td class='text-center'>" + (item.FillingStation != undefined ? item.FillingStation : "-") + "</td>");
                tr.append("<td class='text-center'>" + (item.Driver != undefined ? item.Driver : "-" )+ "</td>");
                tr.append("<td class='text-center'>" + (item.FuelType != undefined ? item.FuelType : "-" )+ "</td>");
                tr.append("<td class='text-center'> " +( item.Quantities != undefined ? item.Quantities : "-")+ "</td>");
                tr.append("<td class='text-center'> " +( item.ActualMilage != undefined ? item.ActualMilage : "-")+ "</td>");
                tr.append("<td class='text-center'> " +( item.CurrentMilage != undefined ? item.CurrentMilage : "-")+ "</td>");
                tr.append("<td class='text-center'> " +( item.AmountExVal != undefined ? item.AmountExVal : "-")+ "</td>");
                tr.append("<td class='text-center'> " +( item.Discount != undefined ? item.Discount : "-")+ "</td>");
                tr.append("<td class='text-center'> " +( item.VatAmount != undefined ? item.VatAmount : "-")+ "</td>");
                tr.append("<td class='text-center'> " +( item.AmountInVal != undefined ? item.AmountInVal : "-")+ "</td>");
                if (item.AmountExVal != undefined)
                    amtTotal = parseFloat(amtTotal) + parseFloat(item.AmountExVal);
                if (item.Discount != undefined)

                    vatTotal = parseFloat(vatTotal) + parseFloat(item.Discount);
                if (item.VatAmount != undefined)
                    discount = parseFloat(discount) + parseFloat(item.VatAmount);
                if (item.AmountInVal != undefined)
                    amtVat = parseFloat(amtVat) + parseFloat(item.AmountInVal);
                if (item.FuelRecordId != 0) {
                    tr.append("<td class='text-center' data-title='Edit'> "
                        + "<div> <a href= 'javascript:void(0);' onclick='gridedit(" + item.FuelRecord_DetailId + ")'  data-asset=" + item.FuelRecord_DetailId
                        + " class='btn btn-xs btn-default'><i class='fa fa-pencil text-success'></i><span class='bold'> &nbsp;Edit </span></a></div>" + "</td>");
                }
                else {
                    tr.append("<td></td>")
                }
                if (item.FuelRecordId != 0) {
                    tr.append("<td class='text-center' data-title='Delete'> "
                        + "<div> <a href='javascript:void(0);' onclick='deleteFuelRecord(" + item.FuelRecord_DetailId + ")' data-asset=" + item.FuelRecord_DetailId
                        + " class='btn btn-xs btn-default'><i class='fa fa-trash text-danger'></i> &nbsp;Delete</a></div>" + "</td>");
                }
                else {
                    tr.append("<td></td>")
                }
                $("#tblUploadedData tbody").append(tr);
            });
            $("#tblUploadedData #tfootAmtTotal").html(amtTotal);
            $("#tblUploadedData #tfootDiscount").html(vatTotal);
            $("#tblUploadedData #tfootVatTotal").html(discount);
            $("#tblUploadedData #tfootAmtVatTotal").html(amtVat);
        }

        $(function () {
            $('.excelform').hide();

            $("#Excel").click(function () {
                $('.excelform').show();
            });

            $('#Manual').click(function () {
                $('.excelform').hide();
                $("#FuelRecord_DetailId").val('0')
                var d = new Date();

               
                document.getElementById("manualcreate").reset();

                $("#modalSaveItemData").modal('show');

            });
        });

       

        function deleteFuelRecord(id) {
            swal({
                title: "Are you sure?",
                text: "Your will not be able to recover this Fuel Record Details!",
                type: "warning",
                showCancelButton: true,
                confirmButtonColor: "#DD6B55",
                confirmButtonText: "Yes, delete it!",
                cancelButtonText: "No, cancel plx!",
                closeOnConfirm: false,
                closeOnCancel: false
            },
                function (isConfirm) {
                    if (isConfirm) {
                        $.ajax({
                            type: "POST",
                            ///url: '_ViewMaintanence',
                            url: '@Url.Action("DeleteFuelRecordByID", "FuelManagement")',
                            datatype: "json",
                            data: { id: id },
                            success: function (data) {
                                swal("Deleted!", "Fuel Record Details has been deleted.", "success");
                                editgridload();
                                
                            }
                        });

                    } else {
                        swal("Cancelled", "Your Fuel Record Detail is safe :)", "error");
                    }
                });
        }

    </script>


    @if (Model.Id != 0)
    {
        <script>

            function editgridload() {
                $.ajax({
                    type: 'Get',
                    url: '/FuelManagement/GetFuelDetails?fuelmanagetid=' + @Model.Id,
                    dataType: 'json',
                    contentType: "application/json; charset=utf-8",
                    
                    success: function (data) {
                        if ($('#Is_Excel').val() > 0) {
                            $('.fuelDetailsDiv').show();
                            $("#tblUploadedData tbody").empty();
                            CreateItemList(data);
                            if ($.fn.DataTable.isDataTable("#fuelDetailsDiv")) {

                                $('#fuelDetailsDiv').DataTable().clear().destroy();
                            }
                            $("#fuelDetailsDiv").html('')

                            $("#fuelDetailsDiv").html($("#tblUploadedData").html());
                        }
                        else {
                            $('.fuelDetailsDiv').hide();
                            $('.fuelDetailsExcel').show();
                            $("#tblUploadedData tbody").empty();
                            CreateItemListDetail(data);
                            if ($.fn.DataTable.isDataTable("#fuelDetailsExcel")) {

                                $('#fuelDetailsExcel').DataTable().clear().destroy();
                            }
                            $("#fuelDetailsExcel").html('')

                            $("#fuelDetailsExcel").html($("#tblUploadedData").html());
                        }
                       
                        var table = $('#fuelDetailsDiv').dataTable(
                            {
                                "lengthChange": false,
                                "deferRender": true,
                            }
                        );
                    }
                });
            }
            editgridload();
            function gridedit(id) {
                $.ajax({
                 type: 'Get',

                  cache: false,
                  contentType: false,
                    processData: false,
                    url: '@Url.Action("GetFuelManualDetails", "FuelManagement")?fuelmanagemaualbyid=' + id,
                  dataType: 'json',
                    success: function (data) {
                        document.getElementById("manualcreate").reset();

                        var item = data.Html;

                        //$("#ManualDate").val(getFormattedDate(item.Date));
                        $("#ManualFillingStation").val(item.FillingStation);
                        $("#ManualPeriodFrom").val(getFormattedDate(item.PeriodFrom));
                        $("#ManualPeriodTo").val(getFormattedDate(item.PeriodTo));
                        $("#ManualRegistrationNo").val(item.RegistrationNo);
                        $("#ManualFuelInvoiceNo").val(item.FuelInvoiceNo);
                        $("#ManualInvoiceDate").val(getFormattedDate(item.InvoiceDate));
                        $("#ManualPaymentCertificateNo").val(item.PaymentCertificateNo);
                        $("#ManualSupplierCodeName").val(item.SupplierCodeName);
                        $("#ManualDiscountAmountDiesel").val(item.DiscountAmountDiesel);
                        $("#ManualDiscountAmountGasoline").val(item.DiscountAmountGasoline);
                        $("#ManualInvoiceDiscountAmount").val(item.InvoiceDiscountAmount);
                        $("#ManualInvoiceTotalAmount").val(item.InvoiceTotalAmount);
                        $("#MaunalInvoiceVatAmount").val(item.InvoiceVatAmount);
                        $("#ManualAmountDieselLt").val(item.AmountDieselLt);
                        $("#ManualAmountGasolineLt").val(item.AmountGasolineLt);
                        $("#ManualClaimNo").val(item.ClaimNo);

                 



                        //$("#ManualDriver").val(item.Driver);
                        //$("#ManualActualMileage").val(item.ActualMilage);
                        //$("#ManualCurrentMileage").val(item.CurrentMilage);

                        //$("#ManualVoucherNo").val(item.VoucherNo);
                          
                           $("#ManualFuelType").val(item.FuelType);
                        //$("#ManualQuantityLitre").val(item.Quantities);
                        //$("#ManualAmount").val(item.AmountExVal);
                        //   $("#ManualDiscountAmount").val(item.Discount);
                        //   $("#MaunalVatAmount").val(item.VatAmount);
                        //$("#ManualAmountInc").val(item.AmountInVal);
                        $("#FuelRecord_DetailId").val(item.FuelRecord_DetailId);
                        $("#modalSaveItemData").modal('show');

                    }

             });

            };
        </script>
    }
}