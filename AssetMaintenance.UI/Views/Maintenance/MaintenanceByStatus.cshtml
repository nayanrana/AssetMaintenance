@model AssetMaintenance.BAL.DTO.MaintenanceByStatusDto
@using AssetMaintenance.Helper

@{
    ViewBag.Title = "Chartist";
}

<div class="normalheader ">
    <div class="hpanel">
        <div class="panel-body">
            <a class="small-header-action" href="">
                <div class="clip-header">
                    <i class="fa fa-arrow-up"></i>
                </div>
            </a>

            <div id="hbreadcrumb" class="pull-right m-t-lg">
                <ol class="hbreadcrumb breadcrumb">
                    <li><a href="index.html">Dashboard</a></li>
                    <li class="active">
                        <span>Maintenance By Status </span>
                    </li>
                </ol>
            </div>
            <h2 class="font-light m-b-xs">
                Maintenance By Status
            </h2>
            <small>Maintenance By Status</small>
        </div>
    </div>
</div>

<div class="content">
    <div class="row">
        <div class="col-lg-4">
            <div class="hpanel">
                <div class="panel-heading">
                    <div class="panel-tools">
                        <a class="showhide"><i class="fa fa-chevron-up"></i></a>
                        <a class="closebox"><i class="fa fa-times"></i></a>
                    </div>
                    Maintenance By Status
                </div>
                <div class="panel-body">
                    <div>
                        <div id="ct-chart5" class="ct-perfect-fourth"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Styles {
    @Styles.Render("~/bundles/chartist/css")
}

@section Scripts {
    @Scripts.Render("~/bundles/chartist/js")

    <script type="text/javascript">

        $(function () {

            // Simple pie chart

            var data = {
                //series: [@Model.Completed, @Model.OverDue, @Model.Scheduled,@Model.ToSchedule],                                
                labels: [@Model.Completed, @Model.OverDue, @Model.Scheduled,@Model.ToSchedule],
                series: [{
                    value: @Model.Completed,
                    meta: 'Completed'
                }, {
                    value: @Model.OverDue,
                        meta: 'Completed'
                }, {
                    value: @Model.Scheduled,
                        meta: 'Completed'
                }, {
                    value: @Model.ToSchedule,
                        meta: 'Completed'
                }]
            };

            var sum = function (a, b) { return a + b };

            new Chartist.Pie('#ct-chart5', data,
                {
                    labelInterpolationFnc: function (value) {
                        //return Math.round(value / data.series.reduce(sum) * 100) + '%';
                        return value;
                    }
                });

        });
        $('.ct-perfect-fourth').on('click', '.ct-slice-pie', function () {
            debugger;
            //alert(Chartist.deserialize(this.getAttribute('ct:meta')));
            var stat = Chartist.deserialize(this.getAttribute('ct:meta'));
            location.href = "/Maintenance/MaintenanceByStatusList?status="+stat;             
        });
    </script>
}