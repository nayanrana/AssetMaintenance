@model AssetMaintenance.BAL.DTO.AssetMaintenanceDetailDto
@using AssetMaintenance.Helper

<div class="normalheader ">
    <div class="hpanel">
        <div class="panel-body">
            <a class="small-header-action" href="">
                <div class="clip-header">
                    <i class="fa fa-arrow-up"></i>
                </div>
            </a>

            <div id="hbreadcrumb" class="pull-right m-t-lg">
                <ol class="hbreadcrumb breadcrumb">
                    <li><a href="\">Maintenance</a></li>
                    <li class="active">
                        <span>Edit Maintenance </span>
                    </li>
                </ol>
            </div>
            <h2 class="font-light m-b-xs">
                Edit Maintenance
            </h2>
            <small>Maintenance By Status</small>
        </div>
    </div>
</div>

<div class="content">
    <div class="register-container" style="padding-top: 0;">
        <div class="row">
            <div class="col-md-12">
                @*<div class="text-center m-b-md">
                        <h3>Company Profile</h3>
                    </div>*@
                <div class="hpanel">
                    <div class="panel-body">
                        <form enctype="multipart/form-data" id="companyForm" method="post" role="form">
                            <input name="__RequestVerificationToken" type="hidden" value="z1F7bd3lMKGEYG84of1CVWnD60ZkkZAeCZD96ZK0Gr-1WrCra-BV-iM3tTXiZnK9FR3IZk3fUZR_b9vXmvP0MhimEE4vFY5U0s_-OyUPQ91PyV1QuoM18AKTZF0o1yEAKI3lLZZjQ7LKzgFqx2er9w2">
                            <div class="row">
                                @Html.HiddenFor(model => model.AssetId)
                                @Html.HiddenFor(model => model.MaintTypeId_cbo)
                                @Html.HiddenFor(model => model.AssetNo)
                                @Html.HiddenFor(model => model.Category)
                                @Html.HiddenFor(model => model.URI)

                                <div class="form-group col-lg-12">
                                    <div class="form-group col-lg-6">
                                        <label class="control-label" for="Name">Registration No.</label>
                                        <div>
                                            @Model.AssetNo
                                        </div>
                                    </div>
                                    <div class="form-group col-lg-6">
                                        <label class="control-label" for="SiteUrl">Category</label>
                                        <div>
                                            @Model.Category
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group col-lg-12">
                                    <div class="form-group col-lg-6">
                                        <label>Type</label>
                                        <div>
                                            @Model.Maintenance
                                        </div>
                                    </div>
                                    <div class="form-group col-lg-6">
                                        <label>Description</label>
                                        @Html.TextAreaFor(model => model.MaintDescription, new { @class = "form-control", cols = "50", rows = "4", maxlength = "200", placeholder = "Description ..." })
                                        @*<textarea cols="50" rows="4" maxlength="200" placeholder="Description ..." value="" name="Summary" id="Summary" class="form-control"></textarea>*@
                                    </div>
                                </div>
                                <div class="form-group col-lg-12">
                                    <div class="form-group col-lg-6">
                                        <label class="control-label" for="AnnualRevenue">Status <span class="req">*</span> </label>
                                        @Html.DropDownList("MaintStatusId_cbo", new SelectList(ViewBag.lstStatus, "MaintStatusId", "Description"), new { @Class = "form-control" })

                                    </div>
                                    <div class="form-group col-lg-6">
                                        <label>Avail. Status <span class="req">*</span></label>
                                        @Html.DropDownListFor(m => m.AssetStatus,
                                                new SelectList(new List<SelectListItem> {
                                                         new SelectListItem { Text = "Available", Value = "1"},
                                                         new SelectListItem { Text = "Not Available", Value = "0"}
                                                     }, "Value", "Text"),
                                                "- Select Avail. status -",
                                                 new { @class = "form-control" })
                                        @*@Html.TextBoxFor(model => model.MaintStatusId_cbo, new { @class = "form-control" })*@
                                    </div>
                                </div>
                                <div class="form-group col-lg-12">
                                    <div class="form-group col-lg-6">
                                        <label class="control-label" for="AnnualRevenue">Contact Details</label>
                                        @Html.TextBoxFor(model => model.ContactDetails, new { @class = "form-control" })
                                    </div>
                                    <div class="form-group col-lg-6">
                                        <label>Company Name</label>
                                        @Html.TextBoxFor(model => model.CompanyName, new { @class = "form-control" })
                                    </div>
                                </div>
                                <div class="form-group col-lg-12">
                                    <div class="form-group col-lg-6">
                                        <label class="control-label" for="AnnualRevenue">Phone Number</label>
                                        @Html.TextBoxFor(model => model.PhoneNumber, new { @class = "form-control", type = "phone", placeholder = "(xxx)xxx-xxxx" })
                                    </div>
                                    <div class="form-group col-lg-6">
                                        <label>Reference</label>
                                        @Html.TextBoxFor(model => model.CompanyRef, new { @class = "form-control" })
                                    </div>
                                </div>
                                <div class="form-group col-lg-12">
                                    <div class="form-group col-lg-6">
                                        <label class="control-label" for="AnnualRevenue">Start Date <span class="req">*</span></label>
                                        @Html.TextBoxFor(model => model.StartDate, "{0:dd/MM/yyyy}", new { @class = "form-control datepicker" })
                                    </div>
                                    <div class="form-group col-lg-6">
                                        <label>End Date <span class="req">*</span></label>
                                        @Html.TextBoxFor(model => model.EndDate, "{0:dd/MM/yyyy}", new { @class = "form-control datepicker" })
                                    </div>
                                </div>

                                <div class="form-group col-lg-12">
                                    <div class="form-group col-lg-6">
                                        <label class="control-label" for="AnnualRevenue">Calculated Odometer</label>
                                        @Html.TextBoxFor(model => model.CalculatedOdometer, new { @class = "form-control allownumericwithoutdecimal" })
                                    </div>
                                    <div class="form-group col-lg-6">
                                        <label>Calculated Enginee Hrs.</label>
                                        @Html.TextBoxFor(model => model.CalculatedEngineHrs, new { @class = "form-control allownumericwithoutdecimal" })
                                    </div>
                                </div>
                                <div class="form-group col-lg-12">
                                    <div class="form-group col-lg-6">
                                        <label class="control-label" for="AnnualRevenue">Actual Odometer</label>
                                        @Html.TextBoxFor(model => model.ActualOdometer, new { @class = "form-control allownumericwithoutdecimal" })
                                    </div>
                                    <div class="form-group col-lg-6">
                                        <label>Actual Enginee Hrs.</label>
                                        @Html.TextBoxFor(model => model.ActualEngineHrs, new { @class = "form-control allownumericwithoutdecimal" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-12">
                                <div class="hpanel">
                                    <ul class="nav nav-tabs">
                                        <li class="active"><a data-toggle="tab" href="#tab-1" aria-expanded="true"> Amounts</a></li>
                                        <li class=""><a data-toggle="tab" href="#tab-2" aria-expanded="false">Cost/Part Details</a></li>
                                        <li class=""><a data-toggle="tab" href="#tab-3" aria-expanded="false">Notes</a></li>
                                    </ul>
                                    <div class="tab-content">
                                        <div id="tab-1" class="tab-pane active">
                                            <div class="form-group col-lg-12">
                                                <div class="form-group col-lg-6">
                                                    <label class="control-label" for="AnnualRevenue">VAT Amount <span class="req">*</span></label>
                                                    @Html.TextBoxFor(model => model.VATAmount, new { @class = "form-control allownumericwithoutdecimal",readOnly="true"})
                                                </div>
                                                <div class="form-group col-lg-6">
                                                    <label>Total Amount <span class="req">*</span></label>
                                                    @Html.TextBoxFor(model => model.TotalCost, new { @class = "form-control allownumericwithdecimal", readOnly = "true" })
                                                </div>
                                                <div class="form-group col-lg-12">
                                                    <label>VAT Amount included in total cost</label>
                                                    <input type="checkbox" name="name" value="" id="chkAmount" checked="@Model.VATInclInItemsAmt=='1'?'checked':''" />
                                                </div>

                                            </div>
                                        </div>
                                        <div id="tab-2" class="tab-pane">
                                            <div class="panel-body">
                                                <table id="MaintenanceList" class="table table-striped table-bordered table-hover dataTable no-footer">
                                                    <thead>
                                                        <tr>
                                                            <td>Code<span class="req">*</span></td>
                                                            <td>Description<span class="req">*</span></td>
                                                            <td>Qty.<span class="req">*</span></td>
                                                            <td>Cost<span class="req">*</span></td>
                                                            <td>Action</td>
                                                        </tr>
                                                        <tr>
                                                            <td><input type="text" name="code" value="" class="form-control" id="txtCode"  /></td>
                                                            <td><input type="text" name="description" value="" class="form-control" id="txtDesc"  /></td>
                                                            <td><input type="number" name="qty" value="" class="form-control allownumericwithoutdecimal" id="txtQty" min="0" /></td>
                                                            <td><input type="number" name="cost" value="" class="form-control allownumericwithdecimal" id="txtCost" min="0"  /></td>
                                                            <td><input type="button" name="name" class="btn btn-success" value="Add" onclick="insertItem()" /></td>
                                                        </tr>
                                                    </thead>
                                                    @if(Model.lstParts!= null && Model.lstParts.Count > 0)
                                                    {
                                                        <tbody>
                                                            @foreach (var item in Model.lstParts)
	                                                        {
                                                                <tr>
                                                                    <td>@item.ItemCode</td>
                                                                    <td>@item.Description</td>
                                                                    <td>@item.Quantity</td>
                                                                    <td>@item.UnitCost</td>
                                                                    <td></td>
                                                                </tr>
	                                                        }
                                                        </tbody>
                                                    }
                                                    <tbody id="MaintItemBody"></tbody>
                                                </table>
                                            </div>
                                        </div>
                                        <div id="tab-3" class="tab-pane">
                                            <div class="panel-body">
                                                @Html.TextAreaFor(model => model.Comment, new { @class = "form-control", placeholder = "Notes" })
                                            </div>
                                        </div>
                                    </div>


                                </div>
                            </div>
                            <div class="text-center">
                                @*<button type="submit" class="btn btn-success ">save</button>*@
                                <input id="btnSubmit" type="button" class="btn btn-success " value="Save" onclick="addMaintenance();">
                                <input id="btnCancel" type="button" class="btn btn-default " value="Cancel">
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Styles {
    @Styles.Render("~/bundles/datepicker/css")
    <style>
        .req {
            color: red;
        }
    </style>
}

@section Scripts {
    @Scripts.Render("~/bundles/datatables/js")
    @Scripts.Render("~/bundles/datepicker/js")
    @Scripts.Render("~/bundles/datatablesBootstrap/js")
    @Scripts.Render("~/bundles/datatablesPlugins/js")
    <script src="~/Scripts/Custom/jquery.mask.js"></script>
    <script type="text/javascript">
        $(function () {            
        
        //$("#StartDate").val();
        if ($("#MaintStatusId_cbo").val() == "5") {
            validationAdvertiseMasterFormComplete();
        } else if ($("#MaintStatusId_cbo").val() == "6") {
            validationAdvertiseMasterFormValid();
        }else {
            validationAdvertiseMasterFormCommon();
        }
        $('.datepicker').datepicker({ autoclose: true, format: 'dd/mm/yyyy' });
        
        $('#PhoneNumber').mask('(000) 000-0000');
        $('#StartDate').mask('00/00/0000');
        $('#EndDate').mask('00/00/0000');

        $(".allownumericwithoutdecimal").on("keypress keyup blur", function (event) {
            $(this).val($(this).val().replace(/[^\d].+/, ""));
            if ((event.which < 48 || event.which > 57)) {
                event.preventDefault();
            }
        });

        $(".allownumericwithdecimal").on("keypress keyup blur", function (event) {
            //this.value = this.value.replace(/[^0-9\.]/g,'');
            $(this).val($(this).val().replace(/[^0-9\.]/g, ''));
            if ((event.which != 46 || $(this).val().indexOf('.') != -1) && (event.which < 48 || event.which > 57)) {
                event.preventDefault();
            }
        });

    });
    function maintenanceHistory(a, id) {
        var assetName = $(a).attr("data-asset");

        $("#modalTitle").text("Maintenance History for " + assetName);
        $("#MaintenanceHistoryModal").modal('show');

        $.ajax({
            type: "GET",
            url: '@Url.Action("BindMaintenanceDetail", "Maintenance")',
            datatype: "json",
            data: { id: id },
            success: function (data) {
                $('#SearchedUserProfile').html(data);
            }
        });

    }


    var lstItems = []; var tr; var totalCost = 0;
    function insertItem() {
        debugger;
        var code = $("#txtCode").val();
        var desc = $("#txtDesc").val();
        var qty = $("#txtQty").val();
        var cost = $("#txtCost").val();
        ///var tcost = $("#TotalCost").val();

        totalCost = parseFloat(totalCost) + (parseFloat(cost) * parseFloat(qty));
        $("#VATAmount").val((totalCost * 15) / 100);
        
        //if (parseFloat(tcost)>0 && totalCost > parseFloat(tcost)) {
        //    toastr.error("Total cost exceed total amount.");
        //    totalCost = parseFloat(totalCost) - (parseFloat(cost) * parseFloat(qty));
        //    $("#TotalCost").val(totalCost);
        //    return;
        //}
        $("#TotalCost").val(totalCost);
        if (!code && !desc && !qty && !cost) {
            toastr.error("Fill required data.");
            return;
        }
        if (!code) {
            toastr.error("Item code is required."); return;
        } if (!desc) {
            toastr.error("Description is required"); return;
        } if (!qty) {
            toastr.error("Quantity is required."); return;
        } if (!cost) {
            toastr.error("Cost is required."); return;
        }
        lstItems.push({ "ItemCode": code, "Description": desc, "Quantity": qty, "UnitCost": cost });

        //for (var i = 0; i < lstItems.length; i++) {
            tr = $('<tr >');
            tr.append("<td class='text-center' data-title='Asset'>" + code + "</td>");
            tr.append("<td class='text-center' data-title='Asset'>" + desc + "</td>");
            tr.append("<td class='text-center' data-title='Asset'>" + qty + "</td>");
            tr.append("<td class='text-center' data-title='Asset'>" + cost + "</td><td></td></tr>");
            $("#MaintItemBody").append(tr);
        //}

        $("#txtCode").val('');
        $("#txtDesc").val('');
        $("#txtQty").val('');
        $("#txtCost").val('');
        //htmlToDataTable();
    }
    function addMaintenance() {
        
        if ($("#companyForm").valid()) {
            if ($("#MaintStatusId_cbo").val() == "5") {
                if (@Model.lstParts.Count<0 && lstItems.length <= 0) {
                    toastr.error("Add Cost/Part details.");
                    return;
                }
            }
            var formData = new FormData();
            formData.append('ActualEngineHrs', $("#ActualEngineHrs").val());
            formData.append('URI', $("#URI").val());
            formData.append('ActualOdometer', $("#ActualOdometer").val());
            formData.append('AdditionalInfo', $("#AdditionalInfo").val());
            formData.append('AssetId', $("#AssetId").val());
            formData.append('AssetStatus', $("#AssetStatus").val());
            formData.append('CalculatedEngineHrs', $("#CalculatedEngineHrs").val());
            formData.append('CalculatedOdometer', $("#CalculatedOdometer").val());
            formData.append('Comment', $("#Comment").val());
            formData.append('CompanyName', $("#CompanyName").val());
            formData.append('CompanyRef', $("#CompanyRef").val());
            formData.append('ContactDetails', $("#ContactDetails").val());
            formData.append('CoverTypeId_cbo', $("#CoverTypeId_cbo").val());
            formData.append('EndDate', getMMFormattedDate($("#EndDate").val()));
            formData.append('EstimatedValue', $("#EstimatedValue").val());
            formData.append('MaintDescription', $("#MaintDescription").val());
            formData.append('MaintStatusId_cbo', $("#MaintStatusId_cbo").val());
            formData.append('MaintTypeId_cbo', $("#MaintTypeId_cbo").val());
            formData.append('PhoneNumber', $("#PhoneNumber").val());
            formData.append('StartDate', getMMFormattedDate($("#StartDate").val()));
            formData.append('TotalCost', $("#TotalCost").val());
            formData.append('VATAmount', $("#VATAmount").val());
            formData.append('VATInclInItemsAmt', $("#VATInclInItemsAmt").val());
            formData.append('CreatedDate', $("#CreatedDate").val());
            formData.append('UpdatedDate', $("#UpdatedDate").val());
            formData.append('VATInclInItemsAmt', $("#chkAmount").is(':checked')==true?1:0);
            formData.append('Parts', JSON.stringify(lstItems));
            $.ajax({
                type: 'Post',
                dataType: 'json',
                data: formData,
                url: '@Url.Action("InsertMaintenance", "Maintenance")',
                cache: false,
                contentType: false,
                processData: false,
                success: function (data) {
                    debugger;
                    lstItems = [];
                    localStorage.setItem('msg', data);
                    ///toastr.success(data);
                    if (window.location.href.split('&')[2] != undefined)
                        str = window.location.href.split('&')[2].split('=')[1];
                    location.href = '/Maintenance/MaintenanceByStatusList?maintenanceType=' + str;
                    //alert(data);
                }
            });
        }
    }

    function validationAdvertiseMasterFormCommon() {
        $("#companyForm").validate({
            rules: {
                MaintStatusId_cbo: {
                    required: true
                },
                AssetStatus: {
                    required: true
                },
                StartDate: {
                    required: true
                },
                EndDate: {
                    required: true
                }
            },
            messages: {
                MaintStatusId_cbo: {
                    required: "Please enter status"
                },
                AssetStatus: {
                    required: "Please enter available status"
                },
                StartDate: {
                    required: "Please enter Start Date"
                },
                EndDate: {
                    required: "Please enter End Date"
                }
            },
            errorPlacement: function (error, element) {
                if ($(element).hasClass('dtp')) {
                    error.addClass('errormessage').insertAfter(element.parent());
                } else {
                    error.addClass('errormessage').insertAfter(element);
                }
            }
        });
    }
    function validationAdvertiseMasterFormComplete() {
        $("#companyForm").validate({
            rules: {
                MaintStatusId_cbo: {
                    required: true
                },
                AssetStatus: {
                    required: true
                },
                StartDate: {
                    required: true
                },
                EndDate: {
                    required: true
                },
                VATAmount: {
                    required: true,
                },
                TotalCost: {
                    required: true
                },
                Comment: {
                    required: true
                }
            },
            messages: {
                MaintStatusId_cbo: {
                    required: "Please enter status"
                },
                AssetStatus: {
                    required: "Please enter available status"
                },
                StartDate: {
                    required: "Please enter Start Date"
                },
                EndDate: {
                    required: "Please enter End Date"
                },
                VATAmount: {
                    required: "Please enter VAT Amount"
                },
                TotalCost: {
                    required: "Please enter Total Amount"
                },
                Comment: {
                    required: "Please enter Note"
                }
            },
            errorPlacement: function (error, element) {
                if ($(element).hasClass('dtp')) {
                    error.addClass('errormessage').insertAfter(element.parent());
                } else {
                    error.addClass('errormessage').insertAfter(element);
                }
            }
        });
    }
    function validationAdvertiseMasterFormValid() {
        $("#companyForm").validate({
            rules: {
                MaintStatusId_cbo: {
                    required: true
                },
                AssetStatus: {
                    required: true
                },
                TotalCost: {
                    required: true
                }
            },
            messages: {
                MaintStatusId_cbo: {
                    required: "Please select status"
                },
                AssetStatus: {
                    required: "Please enter available status"
                },
                TotalCost: {
                    required: "Please enter Total Amount"
                }
            },
            errorPlacement: function (error, element) {
                if ($(element).hasClass('dtp')) {
                    error.addClass('errormessage').insertAfter(element.parent());
                } else {
                    error.addClass('errormessage').insertAfter(element);
                }
            }
        });
    }


    </script>
}